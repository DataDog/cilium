//go:build !ignore_autogenerated
// +build !ignore_autogenerated

// SPDX-License-Identifier: Apache-2.0
// Copyright Authors of Cilium

// Code generated by deepcopy-gen. DO NOT EDIT.

package types

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OracleInterface) DeepCopyInto(out *OracleInterface) {
	*out = *in
	if in.SecondaryIPs != nil {
		in, out := &in.SecondaryIPs, &out.SecondaryIPs
		*out = make([]OracleIP, len(*in))
		copy(*out, *in)
	}
	in.VCN.DeepCopyInto(&out.VCN)
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OracleInterface.
func (in *OracleInterface) DeepCopy() *OracleInterface {
	if in == nil {
		return nil
	}
	out := new(OracleInterface)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OracleSpec) DeepCopyInto(out *OracleSpec) {
	*out = *in
	if in.SubnetTags != nil {
		in, out := &in.SubnetTags, &out.SubnetTags
		*out = make(map[string]string, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OracleSpec.
func (in *OracleSpec) DeepCopy() *OracleSpec {
	if in == nil {
		return nil
	}
	out := new(OracleSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OracleStatus) DeepCopyInto(out *OracleStatus) {
	*out = *in
	if in.Interfaces != nil {
		in, out := &in.Interfaces, &out.Interfaces
		*out = make([]OracleInterface, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OracleStatus.
func (in *OracleStatus) DeepCopy() *OracleStatus {
	if in == nil {
		return nil
	}
	out := new(OracleStatus)
	in.DeepCopyInto(out)
	return out
}
