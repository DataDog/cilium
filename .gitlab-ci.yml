variables:
  CI_DOCKER_IMAGE: registry.ddbuild.io/images/docker:24.0.4-gbi-focal
  DOCKER_CTX: "."
  DOCKER_BUILD_ARGS: ""

# Force git to remove any reference to the local disk copy of the repository
before_script:
  - git repack -a -d && rm -f .git/objects/info/alternates

.build-docker-image: &build-docker-image
  stage: build
  image: $CI_DOCKER_IMAGE
  tags: ["arch:arm64"]
  rules:
    # Automatically run the pipeline for all pushed tags
    - if: $CI_COMMIT_TAG
    # or for GBILITE builds
    - if: $GBILITE_IMAGE_TO_BUILD
  id_tokens:
    DDSIGN_ID_TOKEN:
      aud: image-integrity
  artifacts:
    paths:
      - .campaigns/image_info.txt
  script:
    - set -x
    # Construct valid --build-args arguments from the DOCKER_BUILD_ARGS variable
    - BUILD_ARGS=""; IFS=$'\n'; for arg in $DOCKER_BUILD_ARGS; do BUILD_ARGS+=" $(echo "--build-arg $arg")"; done; IFS=$' ';
    - if [ ! -z "$CI_COMMIT_TAG" ]; then IMAGE_TAG="$CI_COMMIT_TAG"; elif [ ! -z "$GBILITE_IMAGE_TO_BUILD" ]; then IMAGE_TAG="$( echo $GBILITE_IMAGE_TO_BUILD | awk -F':' '{ print $2 }' )"; git checkout $IMAGE_TAG; else echo "Missing GBILITE_IMAGE_TO_BUILD and CI_COMMIT_TAG"; exit 1; fi
    - if [ "$TARGET" = "debug" ] ; then IMAGE_TAG="$IMAGE_TAG-debug" ; fi
    - IMAGE_REF="registry.ddbuild.io/$IMAGE_NAME:$IMAGE_TAG"
    - METADATA_FILE=$(mktemp)
    - docker buildx build --platform linux/amd64,linux/arm64 --tag $IMAGE_REF --file $DOCKERFILE_PATH $BUILD_ARGS --label CILIUM_VERSION=$(cat VERSION) --label target=prod --target $TARGET --push --metadata-file $METADATA_FILE $DOCKER_CTX
    - ddsign sign $IMAGE_REF --docker-metadata-file $METADATA_FILE
    - jq --raw-output '.["containerimage.digest"]' $METADATA_FILE > .campaigns/image_info.txt

build-docker-image-operator:
  <<: *build-docker-image
  variables:
    IMAGE_NAME: cilium-operator
    DOCKERFILE_PATH: images/operator/Dockerfile
    DOCKER_BUILD_ARGS: |
      BASE_IMAGE=registry.ddbuild.io/images/base/gbi-distroless:release
      OPERATOR_VARIANT=operator
      GOLANG_IMAGE=registry.ddbuild.io/images/mirror/golang:1.21.10@sha256:16438a8e66c0c984f732e815ee5b7d715b8e33e81bac6d6a3750b1067744e7ca
      ALPINE_IMAGE=registry.ddbuild.io/images/mirror/library/alpine:3.17.7@sha256:53cf9478b76f4c8fae126acbdfb79bed6e69e628faff572ebe4a029d3d247d98
    TARGET: release

build-docker-image-runtime:
  <<: *build-docker-image
  variables:
    IMAGE_NAME: cilium-runtime
    DOCKERFILE_PATH: images/runtime/Dockerfile
    DOCKER_BUILD_ARGS: |
      UBUNTU_IMAGE=registry.ddbuild.io/images/base/gbi-ubuntu_2204:release
      TESTER_IMAGE=registry.ddbuild.io/images/mirror/cilium/image-tester:dd09c8d3ef349a909fbcdc99279516baef153f22@sha256:c056d064cb47c97acd607343db5457e1d49d9338d6d8a87e93e23cc93f052c73
      GOLANG_IMAGE=registry.ddbuild.io/images/mirror/golang:1.21.10@sha256:16438a8e66c0c984f732e815ee5b7d715b8e33e81bac6d6a3750b1067744e7ca
      CILIUM_LLVM_IMAGE=registry.ddbuild.io/images/mirror/cilium/cilium-llvm:3408daa17f6490a464dfc746961e28ae31964c66@sha256:ff13a1a9f973d102c6ac907d2bc38a524c8e1d26c6c1b16ed809a98925206a79
      CILIUM_BPFTOOL_IMAGE=registry.ddbuild.io/images/mirror/cilium/cilium-bpftool:d3093f6aeefef8270306011109be623a7e80ad1b@sha256:2c28c64195dee20ab596d70a59a4597a11058333c6b35a99da32c339dcd7df56
      CILIUM_IPROUTE2_IMAGE=registry.ddbuild.io/images/mirror/cilium/cilium-iproute2:f882e3fd516184703eea5ee9b3b915748b5d4ee8@sha256:f22b8aaf01952cf4b2ec959f0b8f4d242b95ce279480fbd73fded606ce0c3fa4
      CILIUM_IPTABLES_IMAGE=registry.ddbuild.io/images/mirror/cilium/iptables:67f517af50e18f64cd12625021f1c39246bb4f92@sha256:d075f03e89aacf51908346ec8ed5d251b8d3ad528ce30a710fcd074cdf91f11d
    DOCKER_CTX: "./images/runtime"
    TARGET: release

# Caveats:
# * The build image is single-arch amd64 and we're doing cross-compilation, so the dlv copy is only valid on amd64. In
#   other words, the arm64 image does not work.
build-docker-image-cilium:
  <<: *build-docker-image
  needs:
    # The cilium image depends on the runtime image
    - build-docker-image-runtime
  variables:
    IMAGE_NAME: cilium
    DOCKERFILE_PATH: images/cilium/Dockerfile
    DOCKER_BUILD_ARGS: |
      CILIUM_RUNTIME_IMAGE=registry.ddbuild.io/cilium-runtime:$CI_COMMIT_TAG
      CILIUM_BUILDER_IMAGE=registry.ddbuild.io/images/mirror/cilium/cilium-builder:7dbbc3b61e926da3c98bc0b1bc9c1233dac09ec5@sha256:bd3c7727fbe729355b426c158dc498445cfd6cce94a6ff41317e96dddb3f9be8
      CILIUM_ENVOY_IMAGE=registry.ddbuild.io/images/mirror/cilium/cilium-envoy:v1.27.5-cffb43e4ac1fa64788a5d638ade20a3d88e18b67@sha256:c494b69b128a40fee34b5caa8c61deeeb13b91b55e0aaddd43f92f788152df6d
    TARGET: release
    NOSTRIP: 0
  script:
    - set -x
    # Construct valid --build-args arguments from the DOCKER_BUILD_ARGS variable
    - BUILD_ARGS=""; IFS=$'\n'; for arg in $DOCKER_BUILD_ARGS; do BUILD_ARGS+=" $(echo "--build-arg $arg")"; done; IFS=$' ';
    - IMAGE_TAG="$CI_COMMIT_TAG"
    - IMAGE_REF="registry.ddbuild.io/$IMAGE_NAME:$IMAGE_TAG"
    - METADATA_FILE1=$(mktemp)
    - METADATA_FILE2=$(mktemp)
    - docker buildx build --platform linux/amd64,linux/arm64 --tag $IMAGE_REF --file $DOCKERFILE_PATH $BUILD_ARGS --label CILIUM_VERSION=$(cat VERSION) --label target=prod --target $TARGET --push --metadata-file $METADATA_FILE1 $DOCKER_CTX
    - ddsign sign $IMAGE_REF --docker-metadata-file $METADATA_FILE1
    - docker buildx build --platform linux/amd64,linux/arm64 --tag $IMAGE_REF-debug --file $DOCKERFILE_PATH $BUILD_ARGS --label CILIUM_VERSION=$(cat VERSION) --label target=debug --target debug --push --metadata-file $METADATA_FILE2 $DOCKER_CTX
    - ddsign sign $IMAGE_REF-debug --docker-metadata-file $METADATA_FILE2

build-docker-image-hubble-relay:
  <<: *build-docker-image
  variables:
    IMAGE_NAME: hubble-relay
    DOCKERFILE_PATH: images/hubble-relay/Dockerfile
    DOCKER_BUILD_ARGS: |
      BASE_IMAGE=registry.ddbuild.io/images/base/gbi-distroless:release
      GOLANG_IMAGE=registry.ddbuild.io/images/mirror/golang:1.21.10@sha256:16438a8e66c0c984f732e815ee5b7d715b8e33e81bac6d6a3750b1067744e7ca
      ALPINE_IMAGE=registry.ddbuild.io/images/mirror/library/alpine:3.17.7@sha256:53cf9478b76f4c8fae126acbdfb79bed6e69e628faff572ebe4a029d3d247d98
    TARGET: release

get-image-tags:
  rules:
    - if: $GBILITE_GITLAB_ACTION == "gbilite-get-images"
  script: .campaigns/get_image_tags.sh > .campaigns/allimages.txt
  artifacts:
    paths:
      - .campaigns/allimages.txt
